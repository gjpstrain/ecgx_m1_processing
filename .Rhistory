passed_yes <- passed %>%
filter(passed == TRUE)
just_passed <- inner_join(data, passed_yes, by = "participant")
final_data <- just_passed %>%
group_by(participant) %>%
dplyr::mutate(ID = cur_group_id())
final_data$participant <- NULL
final_data <- final_data %>%
rename(participant = ID)
write_csv(final_data, paste0("exp_data/ECG_X_EXP1_m1_anon_", identifier,".csv"))
}
anonymise_function("exp_data/ECG_X_EXP1_m1_JT.csv", "exp_data/passedJT.csv", "JT")
#| label: setup
library(tidyverse)
library(conflicted)
library(buildmer)
library(GLMMadaptive)
library(ggdist)
conflicts_prefer(dplyr::select(), dplyr::filter(), lme4::lmer())
m1_ST <- read_csv("exp_data/ECG_X_EXP1_m1_anon_ST.csv")
m1_JT <- read_csv("exp_data/ECG_X_EXP1_m1_anon_JT.csv")
#| label: wrangle-data
wrangle_data <- function(anon_file) {
# extract demographics
demographics <- anon_file %>%
filter(!is.na(gender_slider.response)) %>%
select(matches(c("participant",
"age_textbox.text",
"gender_slider.response")))
if ("total_correct" %in% colnames(anon_file)) {
total_correct <- anon_file %>%
filter(!is.na(total_correct)) %>%
select(c("participant", "total_correct"))
}
# ignore time taken for now
#time_taken <- anon_file %>%
#  filter(!is.na(final.stopped)) %>%
#  select(c("participant", "final.stopped"))
anon_file %>%
select(c("participant",
"image_path",
"S_button.numClicks",
"S_button.timesOn",
"NS_button.numClicks",
"NS_button.timesOn",
"exp_trials_loop.thisN",
"unique_item_no",
"answer")) %>%
mutate(image_path = str_replace(image_path, ".*/", ""),
image_path = str_remove(image_path, "\\.png$")) %>%
separate(image_path, sep = "_",
into = c("vis_condition", "subj", "lead", NA, NA, "ST_condition")) %>%
mutate(vis_condition = case_when(
vis_condition %in% c("J", "JT", "JTI", "ST", "SJT") ~ "vis",
TRUE ~ vis_condition
)) %>%
mutate(ST_condition = recode(ST_condition,
NOST = "nst")) %>%
rename(STEMI_button_click = S_button.numClicks,
NSTEMI_button_click = NS_button.numClicks,
STEMI_button_RT = S_button.timesOn,
NSTEMI_button_RT = NS_button.timesOn,
trial_no = exp_trials_loop.thisN) %>%
filter(unique_item_no < 121) %>%
full_join(demographics, by = "participant") %>%
when("total_correct" %in% colnames(anon_file) ~ full_join(., total_correct, by = "participant"),
~ .) %>%
mutate(across(everything(), ~ gsub("\\[|\\]", "", .))) %>%
mutate(across(ends_with("RT"), as.double)) %>%
mutate(
STEMI_button_click_new = ifelse(STEMI_button_click == 1, "ST", NA),
NSTEMI_button_click_new = ifelse(NSTEMI_button_click == 1, "N_ST", NA)
) %>%
unite("participant_answer",
STEMI_button_click_new,
NSTEMI_button_click_new, sep = ",", na.rm = T) %>%
unite("reaction_time",
STEMI_button_RT,
NSTEMI_button_RT, na.rm = T) %>%
mutate(reaction_time = as.numeric(reaction_time)) %>%
assign(paste0(unique(anon_file$expName), "_tidy"),
value = ., envir = .GlobalEnv)
}
wrangle_data(m1_JT)
ECG_X_EXP1_m1_JT_tidy %>%
mutate(correct = participant_answer == answer) %>%
group_by(vis_condition,ST_condition) %>%
summarise(percent_correct = mean(correct) * 100,
sd_correct = sd(correct),
mean_RT = mean(reaction_time),
sd_RT = sd(reaction_time),
total_exp_correct = sum(correct)) %>%
ggplot(aes(x = interaction(vis_condition,ST_condition), y = percent_correct, fill = interaction(vis_condition,ST_condition))) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = percent_correct - sd_correct, ymax = percent_correct + sd_correct),
position = position_dodge(0.9), width = 0.3) +
geom_text(aes(label = round(percent_correct)), vjust = 2) +
#coord_cartesian(ylim = c(20,100)) +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
theme_ggdist() +
labs(x = "Condition",
y = "% Correct",
title = "JT - N = 79 (incomplete)") +
theme(legend.position = "none")
process_for_payment <- function (raw_df, identifier) {
raw <- read_csv(raw_df) %>%
select(c("participant", "unique_item_no", "AC_button.numClicks")) %>%
filter(unique_item_no %in% c(121:128))
total_correct_df <- raw %>% group_by(participant) %>%
summarise(total_correct_AC = sum(AC_button.numClicks)) %>%
mutate(passed = case_when(
total_correct_AC >= 5 ~ TRUE,
total_correct_AC <= 4 ~ FALSE
)) %>%
arrange(passed)
write_csv(total_correct_df, paste0("exp_data/passed", identifier,".csv"))
}
process_for_payment("exp_data/ECG_X_EXP1_m1_STJ.csv", "STJ")
library(tidyverse)
process_for_payment("exp_data/ECG_X_EXP1_m1_STJ.csv", "STJ")
anonymise_function <- function (df, passed_df, identifier) {
data <- read_csv(df)
passed <- read_csv(passed_df)
passed_yes <- passed %>%
filter(passed == TRUE)
just_passed <- inner_join(data, passed_yes, by = "participant")
final_data <- just_passed %>%
group_by(participant) %>%
dplyr::mutate(ID = cur_group_id())
final_data$participant <- NULL
final_data <- final_data %>%
rename(participant = ID)
write_csv(final_data, paste0("exp_data/ECG_X_EXP1_m1_anon_", identifier,".csv"))
}
anonymise_function("exp_data/ECG_X_EXP1_m1_SJT.csv", "exp_data/passedSTJ.csv", "STJ")
anonymise_function("exp_data/ECG_X_EXP1_m1_STJ.csv", "exp_data/passedSTJ.csv", "STJ")
m1_STJ <- read_csv("exp_data/ECG_X_EXP1_m1_anon_STJ.csv")
#| label: wrangle-data
wrangle_data <- function(anon_file) {
# extract demographics
demographics <- anon_file %>%
filter(!is.na(gender_slider.response)) %>%
select(matches(c("participant",
"age_textbox.text",
"gender_slider.response")))
if ("total_correct" %in% colnames(anon_file)) {
total_correct <- anon_file %>%
filter(!is.na(total_correct)) %>%
select(c("participant", "total_correct"))
}
# ignore time taken for now
#time_taken <- anon_file %>%
#  filter(!is.na(final.stopped)) %>%
#  select(c("participant", "final.stopped"))
anon_file %>%
select(c("participant",
"image_path",
"S_button.numClicks",
"S_button.timesOn",
"NS_button.numClicks",
"NS_button.timesOn",
"exp_trials_loop.thisN",
"unique_item_no",
"answer")) %>%
mutate(image_path = str_replace(image_path, ".*/", ""),
image_path = str_remove(image_path, "\\.png$")) %>%
separate(image_path, sep = "_",
into = c("vis_condition", "subj", "lead", NA, NA, "ST_condition")) %>%
mutate(vis_condition = case_when(
vis_condition %in% c("J", "JT", "JTI", "ST", "SJT") ~ "vis",
TRUE ~ vis_condition
)) %>%
mutate(ST_condition = recode(ST_condition,
NOST = "nst")) %>%
rename(STEMI_button_click = S_button.numClicks,
NSTEMI_button_click = NS_button.numClicks,
STEMI_button_RT = S_button.timesOn,
NSTEMI_button_RT = NS_button.timesOn,
trial_no = exp_trials_loop.thisN) %>%
filter(unique_item_no < 121) %>%
full_join(demographics, by = "participant") %>%
when("total_correct" %in% colnames(anon_file) ~ full_join(., total_correct, by = "participant"),
~ .) %>%
mutate(across(everything(), ~ gsub("\\[|\\]", "", .))) %>%
mutate(across(ends_with("RT"), as.double)) %>%
mutate(
STEMI_button_click_new = ifelse(STEMI_button_click == 1, "ST", NA),
NSTEMI_button_click_new = ifelse(NSTEMI_button_click == 1, "N_ST", NA)
) %>%
unite("participant_answer",
STEMI_button_click_new,
NSTEMI_button_click_new, sep = ",", na.rm = T) %>%
unite("reaction_time",
STEMI_button_RT,
NSTEMI_button_RT, na.rm = T) %>%
mutate(reaction_time = as.numeric(reaction_time)) %>%
assign(paste0(unique(anon_file$expName), "_tidy"),
value = ., envir = .GlobalEnv)
}
wrangle_data(m1_STJ)
# take a look at some descriptive statistics
ECG_X_EXP1_m1_JT_tidy %>%
mutate(correct = participant_answer == answer) %>%
group_by(vis_condition,ST_condition) %>%
summarise(percent_correct = mean(correct) * 100,
sd_correct = sd(correct),
mean_RT = mean(reaction_time),
sd_RT = sd(reaction_time),
total_exp_correct = sum(correct)) %>%
ggplot(aes(x = interaction(vis_condition,ST_condition), y = percent_correct, fill = interaction(vis_condition,ST_condition))) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = percent_correct - sd_correct, ymax = percent_correct + sd_correct),
position = position_dodge(0.9), width = 0.3) +
geom_text(aes(label = round(percent_correct)), vjust = 2) +
#coord_cartesian(ylim = c(20,100)) +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
theme_ggdist() +
labs(x = "Condition",
y = "% Correct",
title = "JT - N = 100 (incomplete)") +
theme(legend.position = "none")
cowplot::plot_grid(ST, ST_minim)
ECG_X_EXP1_m1_STJ_tidy %>%
mutate(correct = participant_answer == answer) %>%
group_by(vis_condition,ST_condition) %>%
summarise(percent_correct = mean(correct) * 100,
sd_correct = sd(correct),
mean_RT = mean(reaction_time),
sd_RT = sd(reaction_time),
total_exp_correct = sum(correct)) %>%
ggplot(aes(x = interaction(vis_condition,ST_condition), y = percent_correct, fill = interaction(vis_condition,ST_condition))) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = percent_correct - sd_correct, ymax = percent_correct + sd_correct),
position = position_dodge(0.9), width = 0.3) +
geom_text(aes(label = round(percent_correct)), vjust = 2) +
#coord_cartesian(ylim = c(20,100)) +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
theme_ggdist() +
labs(x = "Condition",
y = "% Correct",
title = "JT - N = 100 (incomplete)") +
theme(legend.position = "none")
#| label: setup
library(tidyverse)
library(conflicted)
library(buildmer)
library(GLMMadaptive)
library(ggdist)
conflicts_prefer(dplyr::select(), dplyr::filter(), lme4::lmer())
m1_ST <- read_csv("exp_data/ECG_X_EXP1_m1_anon_ST.csv")
m1_JT <- read_csv("exp_data/ECG_X_EXP1_m1_anon_JT.csv")
m1_STJ <- read_csv("exp_data/ECG_X_EXP1_m1_anon_STJ.csv")
# take a look at some descriptive statistics
ECG_X_EXP1_m1_STJ_tidy %>%
mutate(correct = participant_answer == answer) %>%
group_by(vis_condition,ST_condition) %>%
summarise(percent_correct = mean(correct) * 100,
sd_correct = sd(correct),
mean_RT = mean(reaction_time),
sd_RT = sd(reaction_time),
total_exp_correct = sum(correct)) %>%
ggplot(aes(x = interaction(vis_condition,ST_condition), y = percent_correct, fill = interaction(vis_condition,ST_condition))) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = percent_correct - sd_correct, ymax = percent_correct + sd_correct),
position = position_dodge(0.9), width = 0.3) +
geom_text(aes(label = round(percent_correct)), vjust = 2) +
#coord_cartesian(ylim = c(20,100)) +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
theme_ggdist() +
labs(x = "Condition",
y = "% Correct",
title = "JT - N = 100 (incomplete)") +
theme(legend.position = "none")
cowplot::plot_grid(ST, ST_minim)
#| label: setup
library(tidyverse)
library(conflicted)
library(buildmer)
library(GLMMadaptive)
library(ggdist)
conflicts_prefer(dplyr::select(), dplyr::filter(), lme4::lmer())
m1_ST <- read_csv("exp_data/ECG_X_EXP1_m1_anon_ST.csv")
m1_JT <- read_csv("exp_data/ECG_X_EXP1_m1_anon_JT.csv")
m1_STJ <- read_csv("exp_data/ECG_X_EXP1_m1_anon_STJ.csv")
#| label: wrangle-data
wrangle_data <- function(anon_file) {
# extract demographics
demographics <- anon_file %>%
filter(!is.na(gender_slider.response)) %>%
select(matches(c("participant",
"age_textbox.text",
"gender_slider.response")))
if ("total_correct" %in% colnames(anon_file)) {
total_correct <- anon_file %>%
filter(!is.na(total_correct)) %>%
select(c("participant", "total_correct"))
}
# ignore time taken for now
#time_taken <- anon_file %>%
#  filter(!is.na(final.stopped)) %>%
#  select(c("participant", "final.stopped"))
anon_file %>%
select(c("participant",
"image_path",
"S_button.numClicks",
"S_button.timesOn",
"NS_button.numClicks",
"NS_button.timesOn",
"exp_trials_loop.thisN",
"unique_item_no",
"answer")) %>%
mutate(image_path = str_replace(image_path, ".*/", ""),
image_path = str_remove(image_path, "\\.png$")) %>%
separate(image_path, sep = "_",
into = c("vis_condition", "subj", "lead", NA, NA, "ST_condition")) %>%
mutate(vis_condition = case_when(
vis_condition %in% c("J", "JT", "JTI", "ST", "STJ") ~ "vis",
TRUE ~ vis_condition
)) %>%
mutate(ST_condition = recode(ST_condition,
NOST = "nst")) %>%
rename(STEMI_button_click = S_button.numClicks,
NSTEMI_button_click = NS_button.numClicks,
STEMI_button_RT = S_button.timesOn,
NSTEMI_button_RT = NS_button.timesOn,
trial_no = exp_trials_loop.thisN) %>%
filter(unique_item_no < 121) %>%
full_join(demographics, by = "participant") %>%
when("total_correct" %in% colnames(anon_file) ~ full_join(., total_correct, by = "participant"),
~ .) %>%
mutate(across(everything(), ~ gsub("\\[|\\]", "", .))) %>%
mutate(across(ends_with("RT"), as.double)) %>%
mutate(
STEMI_button_click_new = ifelse(STEMI_button_click == 1, "ST", NA),
NSTEMI_button_click_new = ifelse(NSTEMI_button_click == 1, "N_ST", NA)
) %>%
unite("participant_answer",
STEMI_button_click_new,
NSTEMI_button_click_new, sep = ",", na.rm = T) %>%
unite("reaction_time",
STEMI_button_RT,
NSTEMI_button_RT, na.rm = T) %>%
mutate(reaction_time = as.numeric(reaction_time)) %>%
assign(paste0(unique(anon_file$expName), "_tidy"),
value = ., envir = .GlobalEnv)
}
wrangle_data(m1_STJ)
# take a look at some descriptive statistics
ECG_X_EXP1_m1_STJ_tidy %>%
mutate(correct = participant_answer == answer) %>%
group_by(vis_condition,ST_condition) %>%
summarise(percent_correct = mean(correct) * 100,
sd_correct = sd(correct),
mean_RT = mean(reaction_time),
sd_RT = sd(reaction_time),
total_exp_correct = sum(correct)) %>%
ggplot(aes(x = interaction(vis_condition,ST_condition), y = percent_correct, fill = interaction(vis_condition,ST_condition))) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = percent_correct - sd_correct, ymax = percent_correct + sd_correct),
position = position_dodge(0.9), width = 0.3) +
geom_text(aes(label = round(percent_correct)), vjust = 2) +
#coord_cartesian(ylim = c(20,100)) +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
theme_ggdist() +
labs(x = "Condition",
y = "% Correct",
title = "JT - N = 100 (incomplete)") +
theme(legend.position = "none")
cowplot::plot_grid(ST, ST_minim)
library(tidyverse)
process_for_payment <- function (raw_df, identifier) {
raw <- read_csv(raw_df) %>%
select(c("participant", "unique_item_no", "AC_button.numClicks")) %>%
filter(unique_item_no %in% c(121:128))
total_correct_df <- raw %>% group_by(participant) %>%
summarise(total_correct_AC = sum(AC_button.numClicks)) %>%
mutate(passed = case_when(
total_correct_AC >= 5 ~ TRUE,
total_correct_AC <= 4 ~ FALSE
)) %>%
arrange(passed)
write_csv(total_correct_df, paste0("exp_data/passed", identifier,".csv"))
}
process_for_payment("exp_data/ECG_X_EXP1_m1_STJ.csv", "STJ")
#| label: setup
library(tidyverse)
library(conflicted)
library(buildmer)
library(GLMMadaptive)
library(ggdist)
conflicts_prefer(dplyr::select(), dplyr::filter(), lme4::lmer())
m1_ST <- read_csv("exp_data/ECG_X_EXP1_m1_anon_ST.csv") %>%
mutate(grand_condition = "ST")
m1_JT <- read_csv("exp_data/ECG_X_EXP1_m1_anon_JT.csv") %>%
mutate(grand_condition = "JT")
m1_STJ <- read_csv("exp_data/ECG_X_EXP1_m1_anon_STJ.csv") %>%
mutate(grand_condition = "STJ")
#| label: wrangle-data
wrangle_data <- function(anon_file) {
# extract demographics
demographics <- anon_file %>%
filter(!is.na(gender_slider.response)) %>%
select(matches(c("participant",
"age_textbox.text",
"gender_slider.response")))
if ("total_correct" %in% colnames(anon_file)) {
total_correct <- anon_file %>%
filter(!is.na(total_correct)) %>%
select(c("participant", "total_correct"))
}
# ignore time taken for now
#time_taken <- anon_file %>%
#  filter(!is.na(final.stopped)) %>%
#  select(c("participant", "final.stopped"))
anon_file %>%
select(c("participant",
"image_path",
"S_button.numClicks",
"S_button.timesOn",
"NS_button.numClicks",
"NS_button.timesOn",
"exp_trials_loop.thisN",
"unique_item_no",
"answer",
"grand_condition")) %>%
mutate(item = image_path) %>%
mutate(image_path = str_replace(image_path, ".*/", ""),
image_path = str_remove(image_path, "\\.png$")) %>%
separate(image_path, sep = "_",
into = c("vis_condition", "subj", "lead", NA, NA, "ST_condition")) %>%
mutate(vis_condition = case_when(
vis_condition %in% c("J", "JT", "JTI", "ST", "STJ") ~ "vis",
TRUE ~ vis_condition
)) %>%
mutate(ST_condition = recode(ST_condition,
NOST = "nst")) %>%
rename(STEMI_button_click = S_button.numClicks,
NSTEMI_button_click = NS_button.numClicks,
STEMI_button_RT = S_button.timesOn,
NSTEMI_button_RT = NS_button.timesOn,
trial_no = exp_trials_loop.thisN) %>%
filter(unique_item_no < 121) %>%
full_join(demographics, by = "participant") %>%
when("total_correct" %in% colnames(anon_file) ~ full_join(., total_correct, by = "participant"),
~ .) %>%
mutate(across(everything(), ~ gsub("\\[|\\]", "", .))) %>%
mutate(across(ends_with("RT"), as.double)) %>%
mutate(
STEMI_button_click_new = ifelse(STEMI_button_click == 1, "ST", NA),
NSTEMI_button_click_new = ifelse(NSTEMI_button_click == 1, "N_ST", NA)
) %>%
unite("participant_answer",
STEMI_button_click_new,
NSTEMI_button_click_new, sep = ",", na.rm = T) %>%
unite("reaction_time",
STEMI_button_RT,
NSTEMI_button_RT, na.rm = T) %>%
mutate(correct = participant_answer == answer) %>%
mutate(reaction_time = as.numeric(reaction_time)) %>%
assign(paste0(unique(anon_file$expName), "_tidy"),
value = ., envir = .GlobalEnv)
}
wrangle_data(m1_JT)
wrangle_data(m1_ST)
wrangle_data(m1_STJ)
#| label: further-analysis
combined_df <- rbind(ECG_X_EXP1_m1_JT_tidy,
ECG_X_EXP1_m1_ST_tidy,
ECG_X_EXP1_m1_STJ_tidy)
st_nst_model <- buildmer(correct ~ ST_condition +
(1 + ST_condition | participant) +
(1 + ST_condition | image_path),
data = combined_df,
family = binomial)
View(combined_df)
st_nst_model <- buildmer(correct ~ ST_condition +
(1 + ST_condition | participant) +
(1 + ST_condition | item),
data = combined_df,
family = binomial)
summary(st_nst_model)
emmeans(st_nst_model, pairwise ~ ST_condition)
library(emmeans)
emmeans(st_nst_model, pairwise ~ ST_condition)
model1 <- st_nst_model@model
emmeans(model1, pairwise ~ ST_condition)
geom_bar()
combined_df %>% group_by(ST_condition) %>%
summarise(percent_correct = mean(correct) * 100,
sd_correct = sd(correct),
mean_RT = mean(reaction_time),
sd_RT = sd(reaction_time),
total_exp_correct = sum(correct)) %>%
ggplot(aes(x = ST_condition), y = percent_correct)) +
geom_bar()
combined_df %>% group_by(ST_condition) %>%
summarise(percent_correct = mean(correct) * 100,
sd_correct = sd(correct),
mean_RT = mean(reaction_time),
sd_RT = sd(reaction_time),
total_exp_correct = sum(correct)) %>%
ggplot(aes(x = ST_condition, y = percent_correct)) +
geom_bar()
combined_df %>% group_by(ST_condition) %>%
summarise(percent_correct = mean(correct) * 100,
sd_correct = sd(correct),
mean_RT = mean(reaction_time),
sd_RT = sd(reaction_time),
total_exp_correct = sum(correct)) %>%
ggplot(aes(x = ST_condition, y = percent_correct)) +
geom_bar(stat = "identity", position = position_dodge())
model1
